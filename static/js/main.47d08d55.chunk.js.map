{"version":3,"sources":["questionAPI/index.js","components/QuestionBox.js","components/Result.js","index.js"],"names":["qBank","options","questionId","n","Promise","resolve","sort","Math","random","slice","QuestionBox","question","selected","useState","answer","antwoord","floor","length","filename","url","md5","substring","className","src","width","height","frameBorder","map","text","index","key","onClick","Result","score","playAgain","Quiz","state","questionBank","responses","getQuestions","QuizService","then","setState","computeAnswer","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47d08d55.chunk.js","sourcesContent":["const qBank = [\r\n  {\r\n    options: [\"hak\", \"haak\"],\r\n    questionId: \"309456\"\r\n  },\r\n  {\r\n    options: [\"bot\", \"boot\"],\r\n    questionId: \"500\"\r\n  },\r\n  {\r\n    options: [\"mis\", \"mies\"],\r\n    questionId: \"29\"\r\n  },\r\n  {\r\n    options: [\"ui\", \"au\"],\r\n    questionId: \"15\"\r\n  },\r\n  {\r\n    options: [\"mus\", \"moes\"],\r\n    questionId: \"235245\"\r\n  },\r\n  {\r\n    options: [\"reuk\", \"ruk\"],\r\n    questionId: \"2462346\"\r\n  },\r\n  {\r\n    options: [\"veel\", \"viel\"],\r\n    questionId: \"970097\"\r\n  },\r\n  {\r\n    options: [\"aas\", \"as\"],\r\n    questionId: \"34960370\"\r\n  },\r\n  {\r\n    options: [\"ruik\", \"ruk\"],\r\n    questionId: \"2039509\"\r\n  },\r\n  {\r\n    options: [\"pot\", \"poot\"],\r\n    questionId: \"2390472309\"\r\n  },\r\n  {\r\n    options: [\"ziek\", \"zeik\"],\r\n    questionId: \"23095\"\r\n  },\r\n  {\r\n    options: [\"geef\", \"gif\"],\r\n    questionId: \"098\"\r\n  },\r\n\r\n];\r\n\r\nexport default (n = 1) =>\r\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));","import React, {useState} from \"react\";\nimport md5 from \"md5\";\n\nconst QuestionBox = ({question, options, selected}) => {\n    const [answer, setAnswer] = useState(options);\n    const antwoord = options[Math.floor(Math.random() * options.length)];\n    const filename = \"Nl-\" + antwoord + \".ogg\";\n    const hash1 = md5(filename).substring(0,1);\n    const hash2 = md5(filename).substring(0,2);\n    const url = \"https://upload.wikimedia.org/wikipedia/commons/\" + hash1 + \"/\" + hash2 + \"/\" + filename;\n    return (\n        <div className=\"questionBox\">\n            <div className=\"question\">Is it {question[0]} or {question[1]}?</div>\n            <iframe\n              src= {url}\n\n              width=\"300\"\n              height=\"20\"\n              frameBorder=\"0\">\n            </iframe>\n            {answer.map((text, index) => (\n                <button\n                    key={index}\n                    className=\"answerBtn\"\n                    onClick={() => {\n                      if (text === antwoord) {\n                        selected(1);\n                      }\n                      else {\n                        selected(0);\n                      }\n                    }}\n                >\n                    {text}\n                </button>\n            ))}\n        </div>\n    );\n};\n\nexport default QuestionBox;","import React from \"react\";\n\nconst Result = ({score, playAgain}) => (\n  <div className=\"score-board\">\n    <div className=\"score\">You scored {score}/ 1 correct answers, ya ding dong</div>\n    <button className=\"playBtn\" onClick ={playAgain}>\n      Play Again, if you dare...\n    </button>\n  </div>\n);\n\nexport default Result;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/style.css\";\r\nimport QuizService from \"./questionAPI\"\r\nimport QuestionBox from \"./components/QuestionBox\";\r\nimport Result from \"./components/Result\";\r\n\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    questionBank: [],\r\n    score: 0,\r\n    responses: 0\r\n  };\r\n\r\n  getQuestions = () => {\r\n    QuizService().then(options => {\r\n      this.setState({\r\n        questionBank: options\r\n      });\r\n    });\r\n  };\r\n\r\n  computeAnswer = (answer) => {\r\n      this.setState({\r\n        score: this.state.score + answer\r\n      });\r\n\r\n    this.setState({\r\n      responses: this.state.responses < 1 ? this.state.responses + 1 : 1\r\n    });\r\n  }\r\n\r\n  playAgain = () => {\r\n    this.getQuestions();\r\n    this.setState({\r\n      score:0,\r\n      responses:0\r\n    });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"title\">Suppp</div>\r\n        {this.state.questionBank.length > 0 &&\r\n        this.state.responses < 1 &&\r\n        this.state.questionBank.map(\r\n          ({options, questionId}) => (\r\n                <QuestionBox\r\n                  question = {options}\r\n                  options = {options}\r\n                  key={questionId}\r\n                  selected={answer => this.computeAnswer(answer)}\r\n                />\r\n              )\r\n            )}\r\n        {this.state.responses === 1 ? (\r\n          <Result score={this.state.score} playAgain={this.playAgain} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Quiz/>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}