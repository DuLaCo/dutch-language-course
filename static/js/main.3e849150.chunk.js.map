{"version":3,"sources":["components/MainMenu.js","components/OptionsMenu.js","questionAPI/index.js","components/soundbox.js","components/QuestionBox.js","components/Result.js","components/Quiz.js","components/ModeMenu.js","index.js"],"names":["MainMenu","props","className","title","direction","style","width","type","onClick","updateMode","size","block","disabled","qNumber","OptionsMenu","useState","number","setNumber","defaultValue","min","max","Object","keys","length","onChange","value","marks","step","tipFormatter","setGameOptions","danger","goBack","qBank","options","questionId","SoundBox","antwoord","url","audio","key","Audio","shape","play","QuestionBox","small","selected","Result","score","numberOfQuestions","playAgain","Quiz","getQuestions","n","state","Promise","resolve","sort","Math","random","slice","then","randomAnswers","map","option","answer","floor","filename","md5","substring","setState","questionBank","computeAnswer","responses","answers","gameOptions","this","correctAnswer","Component","loadGame","console","log","modes","justify","selectGame","ModeMenu","Game","a","b","modeSwitch","modeArray","proficiency","Array","fill","selection","settings","points","subTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e849150.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button, Card, Space} from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst MainMenu = (props) => {\r\n  return (\r\n    <div className=\"main-menu\">\r\n      <Card title=\"Select Mode\">\r\n        <div className=\"menu-buttons\" >\r\n          <Space direction = \"vertical\" style={{width : '30%'} }>\r\n          <Button type=\"primary\" onClick={() => props.updateMode(1)} size=\"large\" block>Practice</Button>\r\n          <Button type=\"default\" onClick={() => props.updateMode(2)} size=\"large\" block disabled>Test</Button>\r\n          <Button type=\"default\" onClick={() => props.updateMode(3)} size=\"large\" block disabled>Learn</Button>\r\n          </Space>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;","import React, {useState} from \"react\";\r\nimport {Slider, Button, Space, } from \"antd\";\r\n\r\nconst qNumber = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n\r\n\r\nconst OptionsMenu = (props) => {\r\n  const [number, setNumber] = useState(5);\r\n  return (\r\n    <div className=\"options\">\r\n      <Space direction=\"vertical\" style={{width : '30%'}} >\r\n      <h2>How many question do you want</h2>\r\n      <div>\r\n        <Slider\r\n          defaultValue={5}\r\n          min={0}\r\n          max={Object.keys(qNumber).length - 1}\r\n          onChange={(value) => {setNumber(value+1)}}\r\n          marks={qNumber}\r\n          step={null}\r\n          tipFormatter={value => qNumber[value]}\r\n        />\r\n      </div>\r\n\r\n      <Button block size = \"large\" type=\"primary\" onClick={()=>{props.setGameOptions(number)}}>Let's  Gooo</Button>\r\n      <Button block size = \"large\" danger onClick={props.goBack}>Go Back</Button>\r\n      </Space>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default OptionsMenu;","const qBank = [\r\n  {\r\n    options: [\"hak\", \"haak\"],\r\n    questionId: \"309456\"\r\n  },\r\n  {\r\n    options: [\"bot\", \"boot\"],\r\n    questionId: \"500\"\r\n  },\r\n  {\r\n    options: [\"mis\", \"mies\"],\r\n    questionId: \"29\"\r\n  },\r\n  {\r\n    options: [\"ui\", \"au\"],\r\n    questionId: \"15\"\r\n  },\r\n  {\r\n    options: [\"mus\", \"moes\"],\r\n    questionId: \"235245\"\r\n  },\r\n  {\r\n    options: [\"reuk\", \"ruk\"],\r\n    questionId: \"2462346\"\r\n  },\r\n  {\r\n    options: [\"veel\", \"viel\"],\r\n    questionId: \"970097\"\r\n  },\r\n  {\r\n    options: [\"aas\", \"as\"],\r\n    questionId: \"34960370\"\r\n  },\r\n  {\r\n    options: [\"ruik\", \"ruk\"],\r\n    questionId: \"2039509\"\r\n  },\r\n  {\r\n    options: [\"pot\", \"poot\"],\r\n    questionId: \"2390472309\"\r\n  },\r\n  {\r\n    options: [\"ziek\", \"zeik\"],\r\n    questionId: \"23095\"\r\n  },\r\n  {\r\n    options: [\"geef\", \"gif\"],\r\n    questionId: \"098\"\r\n  },\r\n\r\n];\r\n\r\nexport default (n) =>\r\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));","import React from \"react\";\r\nimport {SoundFilled} from \"@ant-design/icons/lib\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\n\r\n\r\nconst SoundBox = ({antwoord, url, key})  => {\r\n  /*let filename = \"Nl-\" + antwoord + \".ogg\";\r\n  let url = \"https://upload.wikimedia.org/wikipedia/commons/\" + md5(filename).substring(0,1) + \"/\" + md5(filename).substring(0,2) + \"/\" + filename;\r\n  console.log(url); */\r\n  let audio = new Audio(url);\r\n  const start = () => {\r\n    audio.play()\r\n  }\r\n  return (\r\n    <div className=\"soundBox\">\r\n      <Button type=\"primary\" shape=\"circle\" className=\"audio-button\"\r\n              onClick={start}>\r\n        <SoundFilled/>\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default SoundBox;","import React from \"react\";\nimport SoundBox from \"./soundbox\";\nimport {Button, Space, Card} from \"antd\";\n\nconst QuestionBox = (props) => {\n    let title = \"Is it \" + props.options[0] + \" or \" + props.options[1] + \"?\";\n\n    return (\n        <Card type = \"inner\" className=\"questionBox\" title={title} small>\n          <Space direction=\"horizontal\">\n            <SoundBox antwoord = {props.antwoord} key = {props.key} url = {props.url}/>\n            <Button block\n                    className=\"answerBtn\"\n                    onClick={() => {\n                      props.selected(+(props.options[0]===props.antwoord))\n                      }\n                    }\n                >\n                    {props.options[0]}\n                </Button>\n              <Button block\n                className=\"answerBtn\"\n                onClick={() => {\n                  props.selected(+(props.options[1]===props.antwoord))\n                }\n                }\n              >\n                {props.options[1]}\n              </Button>\n            </Space>\n        </Card>\n    );\n};\n\nexport default QuestionBox;","import React from \"react\";\nimport {Button, Space} from \"antd\";\n\nconst Result = (props) => (\n  <Space direction=\"vertical\" style={{width : '100%'}}  className=\"score-board\">\n    <span className=\"score\">You scored {props.score}/ {props.numberOfQuestions} correct answers, ya ding dong</span>\n    <Button size = \"large\" block type = \"primary\" className=\"playBtn\" onClick ={props.playAgain}>\n      Play Again, if you dare...\n    </Button>\n    <Button size = \"large\" block danger className=\"quitButton\" onClick={props.goBack}> Go Back</Button>\n  </Space>\n);\n\nexport default Result;","import React, {Component} from \"react\";\r\nimport \"../assets/style.css\";\r\nimport QuizService from \"../questionAPI\"\r\nimport QuestionBox from \"./QuestionBox\";\r\nimport Result from \"./Result\";\r\nimport md5 from \"md5\";\r\nimport {Card, Space} from \"antd\";\r\n\r\n\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questionBank: [],\r\n      answers: [],\r\n      score: 0,\r\n      responses: 0,\r\n      numberOfQuestions: props.gameOptions[0],\r\n    };\r\n  }\r\n\r\n\r\n\r\n  getQuestions = () => {\r\n    QuizService(this.state.numberOfQuestions).then(options => {\r\n      let randomAnswers = options.map((option) => {\r\n        let answer = option.options[Math.floor(Math.random() * option.options.length)];\r\n        let filename = \"Nl-\" + answer + \".ogg\";\r\n        return {\r\n          \"options\": option.options,\r\n          \"questionId\": option.questionId,\r\n          \"correctAnswer\": answer,\r\n          \"url\": \"https://upload.wikimedia.org/wikipedia/commons/\" + md5(filename).substring(0,1) + \"/\" + md5(filename).substring(0,2) + \"/\" + filename\r\n        };\r\n      });\r\n      this.setState({\r\n        questionBank: randomAnswers\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n  computeAnswer = (answer) => {\r\n    this.setState({\r\n      score: this.state.score + answer\r\n    });\r\n\r\n    this.setState({\r\n      responses: this.state.responses < this.state.numberOfQuestions ? this.state.responses + 1 : this.state.numberOfQuestions\r\n    });\r\n  }\r\n\r\n  playAgain = () => {\r\n    this.getQuestions();\r\n    this.setState({\r\n      score:0,\r\n      responses:0\r\n    });\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card title = \"Quiz\" className=\"container\">\r\n        <Space direction=\"vertical\">\r\n        {this.state.questionBank.length > 0 &&\r\n        this.state.responses < this.state.numberOfQuestions &&\r\n        this.state.questionBank.map(\r\n          ({options, questionId, correctAnswer, url}) => (\r\n            <QuestionBox\r\n              antwoord = {correctAnswer}\r\n              options = {options}\r\n              key={questionId}\r\n              selected={answer => this.computeAnswer(answer)}\r\n              url = {url}\r\n            />\r\n          )\r\n        )}\r\n\r\n        {this.state.responses === this.state.numberOfQuestions ? (\r\n          <Result score={this.state.score} playAgain={this.playAgain} goBack = {this.props.goBack} numberOfQuestions = {this.state.numberOfQuestions}/>\r\n        ) : null}\r\n        </Space>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;","import React from \"react\";\r\nimport OptionsMenu from \"./OptionsMenu\";\r\nimport Quiz from \"./Quiz\";\r\nimport {Button, Row, Space, Card} from \"antd\"\r\n\r\n\r\nconst selectGame = (props) => {\r\n  if (props.modes[1] === 0) {\r\n    return (\r\n      <div className=\"common\">\r\n        <Space direction = \"vertical\" style={{width : '30%'}} >\r\n          <Row justify=\"center\"><Button size = \"large\" block onClick={() => props.updateMode(1, 1)} type = \"primary\">Practice Spelling</Button></Row>\r\n          <Row justify=\"center\"><Button size = \"large\" block> More buttons </Button></Row>\r\n          <Row justify=\"center\"><Button size = \"large\" block onClick={props.goBack} danger>Go Back</Button></Row>\r\n        </Space>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (<OptionsMenu {...props}/>);\r\n  }\r\n}\r\n\r\nconst loadGame = (props) => {\r\n  if (props.gameOptions[0] === 0) {\r\n    console.log('common');\r\n    return (selectGame(props));\r\n  } else {\r\n    return (<Quiz\r\n      {...props}\r\n    />);\r\n  }\r\n}\r\n\r\nconst ModeMenu = (props) => {\r\n\r\n  let modeNames = [\"Main Menu\", [\"Practice\", \"Spelling\"], [\"Test\", \"Spelling\"], [\"Learn\", \"Sounds\"]];\r\n\r\n  return (\r\n    <Card title={modeNames[props.modes[0]][0]}>\r\n      {loadGame(props)}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ModeMenu;","import React, {Component} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MainMenu from \"./components/MainMenu\";\r\nimport ModeMenu from \"./components/ModeMenu\";\r\nimport {PageHeader} from \"antd\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      proficiency: Array(6).fill(null),\r\n      modes: [0, 0],\r\n      selection: [],\r\n      qBank: [],\r\n      settings: [],\r\n      gameOptions: [0],\r\n      points: [],\r\n    };\r\n  }\r\n\r\n  updateMode = (a, b=0) => {\r\n    let modes = this.state.modes.slice();\r\n    modes[0] = a;\r\n    modes[1] = b;\r\n    this.setState({\r\n      modes: modes,\r\n    })\r\n  }\r\n\r\n  setGameOptions = (numberOfQuestions) => {\r\n    let gameOptions = this.state.gameOptions.slice();\r\n    gameOptions[0] = numberOfQuestions;\r\n    this.setState({\r\n      gameOptions: gameOptions,\r\n    })\r\n  }\r\n\r\n  goBack = () => {\r\n    let modes = this.state.modes.slice();\r\n    if(modes[1] === 0){\r\n      modes[0] = 0;\r\n    } else {\r\n      modes[1] = 0;\r\n    }\r\n    this.setGameOptions(1);\r\n    this.setState({\r\n      modes: modes,\r\n    })\r\n  }\r\n\r\n  modeSwitch = (modeArray) => {\r\n    /* if(modeArray[1] === 0) { */\r\n        if (modeArray[0] === 0) {\r\n          return (\r\n            <MainMenu\r\n              updateMode={this.updateMode}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <ModeMenu\r\n              modes = {modeArray}\r\n              goBack={this.goBack}\r\n              updateMode={this.updateMode}\r\n              setGameOptions = {this.setGameOptions}\r\n              gameOptions = {this.state.gameOptions}\r\n            />\r\n          );\r\n\r\n      }\r\n    /* } else {\r\n      switch (modeArray[1]) {\r\n        case 1:\r\n          return (\r\n            <Quiz goBack = {this.goBack} />\r\n          );\r\n        case 0: {\r\n          return(\r\n            this.modeSwitch(modeArray[0])\r\n          );\r\n        }\r\n        default: {\r\n          return(\r\n            this.modeSwitch(modeArray[0])\r\n          );\r\n        }\r\n      }\r\n\r\n\r\n    } */\r\n}\r\n\r\n\r\n\r\n  render () {\r\n    return(\r\n      <div className=\"Game\">\r\n        <PageHeader title=\"Dutch Vowel App\" subTitle=\"Made by Thomas Jorna\"/>\r\n        {this.modeSwitch(this.state.modes)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <Game/>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}